name: Build and Push Docker Image

on:
  push:
    branches:
      - develop

permissions: write-all


jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
      DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
      SERVER_ENV: 'dev'
      MAIN_CLASS: ${{ secrets.MAIN_CLASS }}
      CONTAINER_PORT: ${{ secrets.CONTAINER_PORT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.SUBMODULE_TOKEN }}

      - name: JDK 17을 설치합니다
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build with Gradle
        run: gradle canal-api:bootJar --stacktrace

      - name: Build and Push Docker Image with Jib
        run: gradle :canal-api:jib

      - name: Notify Argo CD
        run: |
          ARGOCD_SERVER=${{ secrets.ARGOCD_SERVER }}
          ARGOCD_AUTH_TOKEN=$(curl -s -X POST $ARGOCD_SERVER/api/v1/session -d "{\"username\":\"${{ secrets.ARGOCD_USERNAME }}\",\"password\":\"${{ secrets.ARGOCD_PASSWORD }}\"}" | jq -r '.token')
          curl -s -X POST "$ARGOCD_SERVER/api/v1/applications/my-app/sync" -H "Authorization: Bearer $ARGOCD_AUTH_TOKEN"