name: CI & CD

on:
  push:
    branches:
      - develop

permissions: write-all

env:
  SERVER_ENV: 'dev'
  MAIN_CLASS: ${{ secrets.MAIN_CLASS }}
  CONTAINER_PORT: ${{ secrets.CONTAINER_PORT }}

  CONTAINER_PORT_USER: ${{ secrets.CONTAINER_PORT_USER }}

  MAIN_CLASS_EUREKA: ${{ secrets.MAIN_CLASS_EUREKA }}
  CONTAINER_PORT_EUREKA: ${{ secrets.CONTAINER_PORT_EUREKA }}

  MAIN_CLASS_GATEWAY: ${{ secrets.MAIN_CLASS_GATEWAY }}
  CONTAINER_PORT_GATEWAY: ${{ secrets.CONTAINER_PORT_GATEWAY }}

  MAIN_CLASS_PROJECT: ${{ secrets.MAIN_CLASS_PROJECT }}
  CONTAINER_PORT_PROJECT: ${{ secrets.CONTAINER_PORT_PROJECT }}

  MAIN_CLASS_COMMUNITY: ${{ secrets.MAIN_CLASS_COMMUNITY }}
  CONTAINER_PORT_COMMUNITY: ${{ secrets.CONTAINER_PORT_COMMUNITY }}

jobs:
  ci-process-with-jib:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.SUBMODULE_TOKEN }}

      - name: JDK 17을 설치합니다
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-   

      - name: Set short SHA in job1
        run: echo "IMAGE_TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build with Gradle
        run: gradle member-service:bootJar --stacktrace

      - name: Build and Push Docker Image with Jib User
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: gradle :user-service:jib -Djib.to.image=${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE_USER }}:${{ env.IMAGE_TAG }}

      - name: Build and Push Docker Image with Jib Eureka
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: gradle :eureka:jib -Djib.to.image=${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE_EUREKA }}:${{ env.IMAGE_TAG }}

      - name: Build and Push Docker Image with Jib Gateway
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: gradle :api-gateway:jib -Djib.to.image=${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE_GATEWAY }}:${{ env.IMAGE_TAG }}

      - name: Build and Push Docker Image with Jib Project
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: gradle :project-service:jib -Djib.to.image=${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE_PROJECT }}:${{ env.IMAGE_TAG }}

      - name: Build and Push Docker Image with Jib Community
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: gradle :community-service:jib -Djib.to.image=${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE_COMMUNITY }}:${{ env.IMAGE_TAG }}

  triggering-ArgoCD-by-changing-an-imageTag:
    runs-on: ubuntu-latest
    needs: ci-process-with-jib

    env:
      IMAGE_TAG: ${{ needs.ci-process-with-jib.outputs.IMAGE_TAG }}

    steps:
      - name: Set short SHA in job2
        run: echo "IMAGE_TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Checkout kustomize repository
        uses: actions/checkout@v2
        with:
          repository: Talk-Kit/talk-kit-k8s
          ref: master
          token: ${{ secrets.SUBMODULE_TOKEN }}

      - name: Update Kubernetes resources
        run: |
          cd deploy/overlays/dev/
          kustomize edit set image ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE }}:${{ env.IMAGE_TAG }}
          kustomize edit set image ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE_EUREKA }}:${{ env.IMAGE_TAG }}
          kustomize edit set image ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE_GATEWAY }}:${{ env.IMAGE_TAG }}
          kustomize edit set image ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE_USER }}:${{ env.IMAGE_TAG }}
          kustomize edit set image ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE_PROJECT }}:${{ env.IMAGE_TAG }}
          kustomize edit set image ${{ secrets.DOCKER_REPOSITORY }}/${{ secrets.DOCKER_IMAGE_COMMUNITY }}:${{ env.IMAGE_TAG }}
          cat kustomization.yaml

      - name: Commit and push changes
        run: |
          cd deploy
          git config --global user.email "${{ secrets.ADMIN_EMAIL }}"
          git config --global user.name "canal"
          git add .
          git commit -am "Update image tag -> ${{ env.IMAGE_TAG }}"
          git push -u origin master