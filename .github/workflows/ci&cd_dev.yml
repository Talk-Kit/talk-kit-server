name: CI & CD

on:
  push:
    branches:
      - develop

permissions: write-all


jobs:
  ci-process-with-jib:
    runs-on: ubuntu-latest

    env:
      DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
      DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
      SERVER_ENV: 'dev'
      MAIN_CLASS: ${{ secrets.MAIN_CLASS }}
      CONTAINER_PORT: ${{ secrets.CONTAINER_PORT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.SUBMODULE_TOKEN }}

      - name: JDK 17을 설치합니다
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Get version and set IMAGE_TAG
        run: |
          echo "IMAGE_TAG=$(echo ${{ github.sha }} | cut -c1-8)" >> $GITHUB_ENV      

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build with Gradle
        run: gradle canal-api:bootJar --stacktrace

      - name: Build and Push Docker Image with Jib
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: gradle :canal-api:jib -Djib.to.image=${{ env.DOCKER_REPOSITORY }}/${{ env.DOCKER_IMAGE }}:${{ env.IMAGE_TAG }}

  triggering-ArgoCD-by-changing-an-imageTag:
    runs-on: ubuntu-latest
    needs: ci-process-with-jib

    steps:
      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Checkout kustomize repository
        uses: actions/checkout@v2
        with:
          repository: Talk-Kit/talk-kit-k8s
          ref: master
          token: ${{ secrets.SUBMODULE_TOKEN }}

      - name: Update Kubernetes resources
        run: |
          cd deploy/overlays/dev/
          kustomize edit set image ${{ env.DOCKER_REPOSITORY }}/${{ env.DOCKER_IMAGE }}:${{ env.IMAGE_TAG }}
          git add .


      - name: Commit and push changes
        run: |
          git config --global user.email "${{ secrets.ADMIN_EMAIL }}"
          git config --global user.name "canal"
          git diff --staged --quiet || git commit -m "k8s manifest update for ${{ env.IMAGE_TAG }}"
          git push -u origin master